names(data) <- c("epoch", paste0("ip_", c(1:ips)))
mdata_x <- melt(data, id.vars = epoch)
data <- read.csv("0.5_IPs_split_0_synth_data_tmp.txt")
ips <- ncol(data) - 1
names(data) <- c("epoch", paste0("ip_", c(1:ips)))
mdata_x <- melt(data, id.vars = epoch)
head(data)
setwd("/home/simon/Desktop/implicit-variational-inference/implicit-processes/res_IP/")
library(ggplot2)
library(reshape2)
data <- read.csv("0.5_IPs_split_0_synth_data_tmp.txt")
ips <- ncol(data) - 1
names(data)
names(data) <- c("epoch", paste0("ip_", c(1:ips)))
names(data)
mdata <- melt(data, id.vars = epoch)
mdata <- melt(data, id.vars = "epoch")
head(mdata)
mdata <- melt(data, id.vars = "epoch", value.name = "IP")
head(mdata)
mdata <- melt(data, id.vars = "epoch", variable.name = "IP")
head(mdata)
names(data) <- c("epoch", c(1:ips))
mdata <- melt(data, id.vars = "epoch", variable.name = "IP")
head(mdata)
ggplot(mdata, aes(epoch, value, col = IP)) +
geom_line() #+ theme_bw() + theme(legend.position = "none") +
ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
ggtitle("Samples of (negative) functions from the implicit prior distribution (BNN)") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5))
ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
ggtitle("Evolution of the position of the 50 inducing points") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5))
ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
ggtitle("Evolution of the position of the 50 induced points") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5))
# Prepare the second plot with the results of the algorithm
train_data <- read.table("../synth_data_tmp.txt")
data_res <- read.csv("final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", paste0("sample_", as.character(1:nsamples)))
# Prepare the second plot with the results of the algorithm
train_data <- read.table("synth_data_tmp.txt")
setwd("/home/simon/Desktop/implicit-variational-inference/implicit-processes/")
# Prepare the second plot with the results of the algorithm
train_data <- read.table("synth_data_tmp.txt")
data_res <- read.csv("final_results_1.0.csv")
data_res <- read.csv("res_IP/final_results_1.0.csv")
data_res <- read.csv("synthetic_cases//final_results_1.0.csv")
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
head(train_data)
head(data_res)
# Prepare the second plot with the results of the algorithm
train_data <- read.table("synth_data_tmp.txt")
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", paste0("sample_", as.character(1:nsamples)))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
head(data_res)
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", paste0("sample_", as.character(1:nsamples)))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
head(data_res)
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
head(data_res, 2)
m_res <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
head(m_res)
mres <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
ggplot(mres, aes(x,y, col = "black")) +
geom_line() + theme_bw() + theme(legend.position = "none") +
ggtitle("Evolution of the position of the 50 induced points") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5))
ggplot(mres, aes(x,y, col = "black")) +
geom_point() + theme_bw() + theme(legend.position = "none") +
ggtitle("Evolution of the position of the 50 induced points") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5))
ggplot(mres, aes(x,y)) + geom_point( color = "black") + theme_bw() + theme(legend.position = "none") +
ggtitle("Evolution of the position of the 50 induced points") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5))
ggplot(mres, aes(x,y)) + geom_point( color = "black") + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5))
ggplot(mres, aes(x,y)) + geom_point( color = "black") + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point("x", "value")
ggplot(mres, aes(x,y)) + geom_point( color = "black") + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(x, value)
ggplot(mres, aes(x,y)) + geom_point( color = "black") + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, value))
ggplot(mres, aes(x,y)) + geom_point( color = "black") + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, value), color = "red")
ggplot(mres, aes(x,y)) + geom_point( color = "black") + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, value), color = "red", alpha = 0.1)
ggplot(mres, aes(x,value)) + geom_point( color = "green", alpha = 0.1) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black")
ggplot(mres, aes(x,value)) + geom_point( color = "blue", alpha = 0.1) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black")
ggplot(mres, aes(x,value)) + geom_point( color = "blue", alpha = 0.07) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black")
ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.07) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black")
ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.1) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black")
ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.2) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black")
ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black")
ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") + geom_line(aes(x, mean_estimate), color = "darkblue")
res_plot <- ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") +
geom_line(aes(x, mean_estimate), color = "darkblue")
library(ggpubr)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2)
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
ggtitle("Evolution of the position of the 50 induced points") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5))
setwd("/home/simon/Desktop/implicit-variational-inference/implicit-processes/")
library(ggplot2)
library(reshape2)
require(gridExtra)
library(ggpubr)
# Prepare the first plot with the evolution of the induced points
data <- read.csv("res_IP/0.5_IPs_split_0_synth_data_tmp.txt")
ips <- ncol(data) - 1
names(data) <- c("epoch", c(1:ips))
mdata <- melt(data, id.vars = "epoch", variable.name = "IP")
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
ggtitle("Evolution of the position of the 50 induced points") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5))
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
mres <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
res_plot <- ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") +
geom_line(aes(x, mean_estimate), color = "darkblue")
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2)
figure
figure
ggsave("evolution-IPs.png", width = 20, height = 60, units = "cm")
ggsave("evolution-IPs.png", width = 20, height = 50, units = "cm")
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ggsave("evolution-IPs.png", width = 20, height = 50, units = "cm")
ggsave("evolution-IPs.png", width = 20, height = 30, units = "cm")
ggsave("evolution-IPs.png", width = 20, height = 20, units = "cm")
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
ggtitle("Evolution of the position of the 50 induced points") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
mres <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
res_plot <- ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") +
geom_line(aes(x, mean_estimate), color = "darkblue") +  xlim(-2, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ggsave("evolution-IPs.png", width = 20, height = 20, units = "cm")
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
mres <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
res_plot <- ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") +
geom_line(aes(x, mean_estimate), color = "darkblue") +  xlim(-2, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
res_plot <- ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") +
geom_line(aes(x, mean_estimate), color = "darkblue") +  xlim(-2, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-1.8, 1.8)
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
mres <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
res_plot <- ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") +
geom_line(aes(x, mean_estimate), color = "darkblue") +  xlim(-1.8, 1.8)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-1.8, 2)
res_plot <- ggplot(mres, aes(x,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") +
geom_line(aes(x, mean_estimate), color = "darkblue") +  xlim(-1.8, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ggsave("evolution-IPs.png", width = 20, height = 20, units = "cm")
ggsave("evolution-IPs.png", width = 20, height = 15, units = "cm")
ggsave("evolution-IPs.png", width = 20, height = 14, units = "cm")
ggsave("evolution-IPs.png", width = 20, height = 13, units = "cm")
res_plot <- ggplot(mres, aes(x*1.02,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") +
geom_line(aes(x, mean_estimate), color = "darkblue") +  xlim(-1.8, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
res_plot <- ggplot(mres, aes(x*1.05,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x, y), color = "black") +
geom_line(aes(x, mean_estimate), color = "darkblue") +  xlim(-1.8, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
res_plot <- ggplot(mres, aes(x*1.05,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x*1.05, y), color = "black") +
geom_line(aes(x*1.05, mean_estimate), color = "darkblue") +  xlim(-1.8, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
res_plot <- ggplot(mres, aes(x*1.06,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x*1.06, y), color = "black") +
geom_line(aes(x*1.06, mean_estimate), color = "darkblue") +  xlim(-1.8, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
res_plot <- ggplot(mres, aes(x*1.06,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x*1.06, y), color = "black") +
geom_line(aes(x*1.06, mean_estimate), color = "darkblue") +  xlim(-2, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ggsave("evolution-IPs.png", width = 20, height = 13, units = "cm")
setwd("/home/simon/Desktop/implicit-variational-inference/implicit-processes/")
library(ggplot2)
library(reshape2)
require(gridExtra)
library(ggpubr)
# theme_set(theme_pubr())
# Prepare the first plot with the evolution of the induced points
data <- read.csv("res_IP/0.5_IPs_split_0_synth_data_tmp.txt")
ips <- ncol(data) - 1
names(data) <- c("epoch", c(1:ips))
mdata <- melt(data, id.vars = "epoch", variable.name = "IP")
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
# Prepare the second plot with the results of the algorithm
# train_data <- read.table("synth_data_tmp.txt")
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
mres <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
res_plot <- ggplot(mres, aes(x*1.06,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x*1.06, y), color = "black") +
geom_line(aes(x*1.06, mean_estimate), color = "darkblue") +  xlim(-2, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ggsave("evolution-IPs.png", width = 20, height = 13, units = "cm")
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP, size = 0.5)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line(aes(size = 0.2)) + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line(aes(size = 0.2)) + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
mres <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
res_plot <- ggplot(mres, aes(x*1.06,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x*1.06, y), color = "black") +
geom_line(aes(x*1.06, mean_estimate), color = "darkblue") +  xlim(-2, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line(aes(size = 0.2)) + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
setwd("/home/simon/Desktop/implicit-variational-inference/implicit-processes/")
library(ggplot2)
library(reshape2)
require(gridExtra)
library(ggpubr)
# Prepare the first plot with the evolution of the induced points
data <- read.csv("res_IP/0.5_IPs_split_0_synth_data_tmp.txt")
ips <- ncol(data) - 1
names(data) <- c("epoch", c(1:ips))
mdata <- melt(data, id.vars = "epoch", variable.name = "IP")
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line(aes(size = 0.2)) + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
mres <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
res_plot <- ggplot(mres, aes(x*1.06,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x*1.06, y), color = "black") +
geom_line(aes(x*1.06, mean_estimate), color = "darkblue") +  xlim(-2, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
setwd("/home/simon/Desktop/implicit-variational-inference/implicit-processes/")
library(ggplot2)
library(reshape2)
require(gridExtra)
library(ggpubr)
setwd("/home/simon/Desktop/implicit-variational-inference/implicit-processes/")
library(ggplot2)
library(reshape2)
require(gridExtra)
library(ggpubr)
# Prepare the first plot with the evolution of the induced points
data <- read.csv("res_IP/0.5_IPs_split_0_synth_data_tmp.txt")
ips <- ncol(data) - 1
names(data) <- c("epoch", c(1:ips))
mdata <- melt(data, id.vars = "epoch", variable.name = "IP")
ips_plot <- ggplot(mdata, aes(value, epoch, col = IP)) +
geom_line() + theme_bw() + theme(legend.position = "none") +
xlab("x") + ylab("epoch") + theme(plot.title = element_text(hjust = 0.5)) +
xlim(-2, 2)
data_res <- read.csv("synthetic_cases/final_results_1.0.csv")
nsamples <- ncol(data_res) - 2
names(data_res) <- c("x", "y", c(1:nsamples))
data_res$mean_estimate <- rowMeans(data_res[, 3:(nsamples + 2)])
data_res <- data_res[order(data_res$x),]
mres <- melt(data_res, id.vars = c("x", "y", "mean_estimate"), variable.name = "sample")
res_plot <- ggplot(mres, aes(x*1.06,value)) + geom_point( color = "lightblue", alpha = 0.5) + theme_bw() +
theme(legend.position = "none") +
ggtitle("Test results") +
xlab("") + ylab("y") + theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(x*1.06, y), color = "black") +
geom_line(aes(x*1.06, mean_estimate), color = "darkblue") +  xlim(-2, 2)
figure <- ggarrange(res_plot, ips_plot,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(2,1))
figure
