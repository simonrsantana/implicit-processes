# maindir <- getwd()
maindir <- c("/home/simon/Desktop/implicit-variational-inference/synthetic_data/compare_results/")
setwd(maindir)
library(ggplot2)
library(reshape2)
library(hexbin)
alphas = c("1.0", "0.0001") # , "0.5", "1.0")
n_alphas  = length(alphas)
# data_vec = c("t_skw", "t_central", "bim", "het", "composite")
folders_to_compare <- c("sparse_fbnn", "vip")
ip_folders <- c("bnn", "ns")
data_fbnn <- paste0(maindir, "fbnn")
setwd(data_fbnn)
prior_fbnn <- read.csv("fbnn_y_forecasted_0.txt")
names_fbnn <- paste0("sample_", c(1:(ncol(prior_fbnn) - 2)), "_yx")
# maindir <- getwd()
maindir <- c("/home/simon/Desktop/implicit-variational-inference/synthetic_data/compare_results/")
setwd(maindir)
library(ggplot2)
library(reshape2)
library(hexbin)
alphas = c("1.0", "0.0001") # , "0.5", "1.0")
n_alphas  = length(alphas)
# data_vec = c("t_skw", "t_central", "bim", "het", "composite")
folders_to_compare <- c("sparse_fbnn", "vip")
ip_folders <- c("bnn", "ns")
data_fbnn <- paste0(maindir, "fbnn")
data_fbnn <- paste0(maindir, "sparse_fbnn")
setwd(data_fbnn)
prior_fbnn <- read.csv("fbnn_y_forecasted_0.txt")
names_fbnn <- paste0("sample_", c(1:(ncol(prior_fbnn) - 2)), "_yx")
data_fbnn <- paste0(maindir, folders_to_compare[ 2 ])
setwd(data_fbnn)
prior_fbnn <- read.csv("fbnn_y_forecasted_0.txt")
names_fbnn
prior_fbnn <- read.csv("fbnn_y_forecasted_0.txt")
data_fbnn <- paste0(maindir, folders_to_compare[ 2 ])
setwd(data_fbnn)
prior_fbnn <- read.csv("fbnn_y_forecasted_0.txt")
getwd()
library(hexbin)
alphas = c("1.0", "0.0001") # , "0.5", "1.0")
n_alphas  = length(alphas)
# data_vec = c("t_skw", "t_central", "bim", "het", "composite")
folders_to_compare <- c("vip", "sparse_fbnn")
ip_folders <- c("bnn", "ns")
data_fbnn <- paste0(maindir, folders_to_compare[ 2 ])
setwd(data_fbnn)
prior_fbnn <- read.csv("fbnn_y_forecasted_0.txt")
names_fbnn <- paste0("sample_", c(1:(ncol(prior_fbnn) - 2)), "_yx")
names(prior_fbnn) <- c("x","y", names_fbnn)
melt_fbnn_prior <- melt(prior_fbnn, id.vars = c("x", "y"))
fbnn_prior_plot <- ggplot(melt_fbnn_prior, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c()
fbnn_prior_plot
data_vip <- paste0(maindir, folders_to_compare[ 1 ])
setwd(data_vip)
# prior_vip <- read.csv("vip_prior_samples_0.txt")
prior_vip <- read.csv("vip_y_forecasted_0.txt")
names_vip <- paste0("sample_", c(1:(ncol(prior_vip) - 2)), "_yx")
names(prior_vip) <- c("x","y", names_vip)
melt_vip_prior <- melt(prior_vip, id.vars = c("x", "y"))
vip_prior_plot <- ggplot(melt_vip_prior, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c()
# stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white", bins = 5)
vip_prior_plot
j = 1
data = ip_folders[j]
for (i in c(1:length(alphas))){
data_dir <- paste0(maindir, data, "/")
setwd(data_dir)
# data_fx_init <- read.csv(paste0(alphas[i], "/", alphas[i],
#                                 "_initial_prior_samples_yx.csv"))
data_fx_final <- read.csv(paste0(alphas[i], "/test_results_", alphas[i],
"_split_0.csv"))
# data_z <- read.csv("synthetic_cases/prior_samples_z.csv")
nsamples <- ncol(data_fx_final) - 2
# nsamples_init <- 100
# data_fx_init <- data_fx_init[, 1:(nsamples_init + 2) ]
# data_fx_final <- data_fx_final[, 1:(nsamples + 2) ]
names_x <- paste0("sample_", c(1:nsamples), "_yx")
# names_z <- paste0("sample_", c(1:nsamples), "_fz")
# names(data_fx_init) <- c("x","y", names_x)
names(data_fx_final) <- c("x","y", names_x)
# names(data_z) <- c("z","y", names_z)
#data_x$mean_fx <- rowMeans(data[, 4:(nsamples + 3)])
#data_z$mean_fz <- rowMeans(data[, 4:(nsamples + 3)])
# mdata_fx_init <- melt(data_fx_init, id.vars = c("x", "y"))
mdata_fx_final <- melt(data_fx_final, id.vars = c("x", "y"))
# mdata_z <- melt(data_z, id.vars = c("z", "y"))
# plots_dir <- paste0(maindir, "/plots/", data, "/")
# setwd(plots_dir)
# Save the initial prior samples
# ip_plot_cont[] ggplot(mdata_fx_init, aes(x, value, col=variable, alpha = 0.9)) +
#   geom_line() + theme_bw() + theme(legend.position = "none") +
#   ggtitle("Initial prior functions sampled (BNN)") + xlim(-2,2) + # ylim(-30,30) +
#   xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5))
# ggsave(filename = paste0(alphas[i], "_initial_fx_", data, ".png"), width=10, height=5, pointsize=12, units = "in")
# Save the final prior samples
# ggplot(mdata_fx_final, aes(x, value, col=variable, alpha = 0.9)) +
#   geom_line() + theme_bw() + theme(legend.position = "none") +
#   ggtitle("Final prior functions sampled (BNN)") + xlim(-2,2) + # ylim(-30,30) +
#   xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5))
# ggplot(mdata_fx_init, aes(x=x, y=value)) +
#   stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
#   scale_fill_distiller(palette= "Spectral", direction=1) +
#   scale_x_continuous(expand = c(0, 0)) +
#   scale_y_continuous(expand = c(0, 0))
nam <- paste("plot_ip_", data, "_", alphas[ i ] , sep = "")
# Create temporary plot
# tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
#   stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white", bins = 7)
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c()
# stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white",
#                   bins = 10)
# geom_hex(bins = 70) +
# scale_fill_continuous(type = "viridis") +
# theme_bw()
# geom_density_2d()
# ggsave(filename = paste0(alphas[i], "_final_fx_", data, ".png"), width=10, height=5, pointsize=12, units = "in")
# Store the plot in a variable
assign(nam, tmp_plot)
}
nam
plot_ip_bnn_1.0
fbnn_prior_plot <- ggplot(melt_fbnn_prior, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=0) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c()
fbnn_prior_plot
fbnn_prior_plot <- ggplot(melt_fbnn_prior, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c()
fbnn_prior_plot
vip_prior_plot <- ggplot(melt_vip_prior, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c()
# stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white", bins = 5)
vip_prior_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c()
for (i in c(1:length(alphas))){
data_dir <- paste0(maindir, data, "/")
setwd(data_dir)
# data_fx_init <- read.csv(paste0(alphas[i], "/", alphas[i],
#                                 "_initial_prior_samples_yx.csv"))
data_fx_final <- read.csv(paste0(alphas[i], "/test_results_", alphas[i],
"_split_0.csv"))
# data_z <- read.csv("synthetic_cases/prior_samples_z.csv")
nsamples <- ncol(data_fx_final) - 2
# nsamples_init <- 100
# data_fx_init <- data_fx_init[, 1:(nsamples_init + 2) ]
# data_fx_final <- data_fx_final[, 1:(nsamples + 2) ]
names_x <- paste0("sample_", c(1:nsamples), "_yx")
# names_z <- paste0("sample_", c(1:nsamples), "_fz")
# names(data_fx_init) <- c("x","y", names_x)
names(data_fx_final) <- c("x","y", names_x)
# names(data_z) <- c("z","y", names_z)
#data_x$mean_fx <- rowMeans(data[, 4:(nsamples + 3)])
#data_z$mean_fz <- rowMeans(data[, 4:(nsamples + 3)])
# mdata_fx_init <- melt(data_fx_init, id.vars = c("x", "y"))
mdata_fx_final <- melt(data_fx_final, id.vars = c("x", "y"))
# mdata_z <- melt(data_z, id.vars = c("z", "y"))
# plots_dir <- paste0(maindir, "/plots/", data, "/")
# setwd(plots_dir)
# Save the initial prior samples
# ip_plot_cont[] ggplot(mdata_fx_init, aes(x, value, col=variable, alpha = 0.9)) +
#   geom_line() + theme_bw() + theme(legend.position = "none") +
#   ggtitle("Initial prior functions sampled (BNN)") + xlim(-2,2) + # ylim(-30,30) +
#   xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5))
# ggsave(filename = paste0(alphas[i], "_initial_fx_", data, ".png"), width=10, height=5, pointsize=12, units = "in")
# Save the final prior samples
# ggplot(mdata_fx_final, aes(x, value, col=variable, alpha = 0.9)) +
#   geom_line() + theme_bw() + theme(legend.position = "none") +
#   ggtitle("Final prior functions sampled (BNN)") + xlim(-2,2) + # ylim(-30,30) +
#   xlab("x") + ylab("y") + theme(plot.title = element_text(hjust = 0.5))
# ggplot(mdata_fx_init, aes(x=x, y=value)) +
#   stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
#   scale_fill_distiller(palette= "Spectral", direction=1) +
#   scale_x_continuous(expand = c(0, 0)) +
#   scale_y_continuous(expand = c(0, 0))
nam <- paste("plot_ip_", data, "_", alphas[ i ] , sep = "")
# Create temporary plot
# tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
#   stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white", bins = 7)
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c()
# stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white",
#                   bins = 10)
# geom_hex(bins = 70) +
# scale_fill_continuous(type = "viridis") +
# theme_bw()
# geom_density_2d()
# ggsave(filename = paste0(alphas[i], "_final_fx_", data, ".png"), width=10, height=5, pointsize=12, units = "in")
# Store the plot in a variable
assign(nam, tmp_plot)
}
plot_ip_bnn_0.0001
plot_ip_bnn_1.0
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void()
tmp_plot
i = 1
data_dir <- paste0(maindir, data, "/")
setwd(data_dir)
data_fx_final <- read.csv(paste0(alphas[i], "/test_results_", alphas[i],
"_split_0.csv"))
# data_z <- read.csv("synthetic_cases/prior_samples_z.csv")
nsamples <- ncol(data_fx_final) - 2
names_x <- paste0("sample_", c(1:nsamples), "_yx")
# names(data_fx_init) <- c("x","y", names_x)
names(data_fx_final) <- c("x","y", names_x)
# mdata_fx_init <- melt(data_fx_init, id.vars = c("x", "y"))
mdata_fx_final <- melt(data_fx_final, id.vars = c("x", "y"))
nam <- paste("plot_ip_", data, "_", alphas[ i ] , sep = "")
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void()
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "polygon" , contour = TRUE, show.legend = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void()
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "polygon" , contour = FALSE, show.legend = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void()
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon" , contour = FALSE, show.legend = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void()
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon" , contour = FALSE, show.legend = FALSE) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void() +
scale_fill_gradientn(colours=rev(brewer.pal(7,"Spectral")))
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon" , contour = FALSE, show.legend = FALSE) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void() +
stat_density_2d(aes(fill = factor(stat(level))), geom = "polygon") +
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon" , contour = FALSE, show.legend = FALSE) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void() +
scale_fill_gradientn(colours=rev(brewer.pal(7,"Spectral")))
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon" , contour = FALSE, show.legend = FALSE) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void() +
stat_density_2d(aes(fill = factor(stat(level))), geom = "polygon") +
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon" , contour = FALSE, show.legend = FALSE) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void() +
stat_density_2d(aes(fill = factor(stat(level))), geom = "polygon")
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "polygon" , contour = TRUE, show.legend = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void()
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE, show.legend = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void()
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "density_2d" , contour = FALSE, show.legend = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void()
tmp_plot
tmp_plot <- ggplot(mdata_fx_final, aes(x=x, y=value)) +
stat_density_2d(aes(fill = ..density..), geom = "raster" , contour = FALSE, show.legend = FALSE) +
scale_fill_distiller(palette="Spectral", direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_color_viridis_c() +
theme_void()
tmp_plot
